---
- name: Get OpenShift version using custom module
  get_ocp_version:
    retries: 3
    delay: 5
  register: openshift_version_result
  failed_when: openshift_version_result.version is not defined

- name: Parse OpenShift version and determine if it's >= 4.12
  ansible.builtin.set_fact:
    version_major: "{{ openshift_version_result.version.split('.')[0] | int }}"
    version_minor: "{{ openshift_version_result.version.split('.')[1] | int }}"

- name: Fail if OpenShift version is 4.17 (Rollback Not Supported)
  ansible.builtin.fail:
    msg: "‚ùå Rollback is not supported from 4.17 as OpenShiftSDN has been removed from OCP 4.17."
  when: version_major | int == 4 and version_minor | int == 17

- name: Pause updates for master MachineConfigPool
  patch_mcp_paused:
    pool_name: "master"
    paused: true

- name: Pause updates for worker MachineConfigPool
  patch_mcp_paused:
    pool_name: "worker"
    paused: true

- name: Patch Network.operator.openshift.io and wait for migration field to clear
  clean_migration_field:
    timeout: "{{ clean_migration_timeout }}"

- name: Change network type to trigger MCO update
  change_network_type:
    network_type: "{{ network_type }}"
    timeout: "{{ change_migration_timeout }}"

- name: Check network migration status
  check_network_migration:
    expected_network_type: "{{ network_type }}"
    max_retries: "{{ max_retries }}"
    delay: "{{ retry_delay }}"
  register: network_migration_result

- name: Display network migration result
  ansible.builtin.debug:
    var: network_migration_result

- name: Trigger OpenshiftSDN deployment
  trigger_network_type:
    network_type: "{{ network_type }}"
    timeout: "{{ sdn_co_timeout }}"

- name: Warn if OpenShift version is < 4.12
  ansible.builtin.debug:
    msg: >
      Warning: The OpenShift version is {{ ocp_version }}. EgressIP, EgressFirewall,
      and multicast features of SDN will not be migrated automatically when moving
      to OVNKubernetes. You must configure them manually.
  when:
    - version_major | int == 4
    - version_minor | int <= 11

- name: Check if disable auto migration is set
  ansible.builtin.set_fact:
    disable_auto_migration: "{{ disable_auto_migration }}"
  failed_when: disable_auto_migration is not defined

- name: Display message when disable_auto_migration is set to true
  ansible.builtin.debug:
    msg: "disable_auto_migration is set to {{ disable_auto_migration }}."

- name: Apply SDN Migration Settings if OpenShift is 4.12 or Higher
  when:
    - version_major | int == 4
    - version_minor | int >= 12
    - disable_auto_migration | bool

  block:
    - name: Disable OpenShift SDN Migration Features
      disable_automatic_migration:
        network_type: "{{ network_type }}"
        egress_ip: "{{ egress_ip | default(omit) }}"
        egress_firewall: "{{ egress_firewall | default(omit) }}"
        multicast: "{{ multicast | default(omit) }}"
      register: patch_result

    - name: Display Patch Result
      ansible.builtin.debug:
        var: patch_result
- name: Customize network settings if parameters are provided
  configure_network_settings:
    configure_network_type: openshiftSDN
    mtu: "{{ mtu | default(omit) }}"
    vxlanPort: "{{ vxlanPort | default(omit) }}"
    retries: 3
    delay: 5
  register: patch_result

- name: Debug patch result
  ansible.builtin.debug:
    msg: "{{ patch_result.msg }}"

- name: Wait until the Network Cluster Operator is in PROGRESSING=True state
  wait_for_network_co:
    timeout: "{{ sdn_co_timeout }}"
  register: network_co_status

- name: Display the status of the Network Cluster Operator
  ansible.builtin.debug:
    msg: "{{ network_co_status.msg }}"

- name: Wait for Multus pods to restart
  wait_multus_restart:
    timeout: "{{ sdn_multus_timeout }}"
